#
# Aliases
#
alias mkdir='mkdir -p'

if (( ${+commands[docker]} )); then
  alias dk='docker'
  alias dkc='docker container'
  alias dkcl='docker container ls -a'
  alias dkcr='docker container run --rm'
  alias dkcR='docker container run --rm --publish-all --interactive --tty'
  alias dkcin='docker container inspect'
  alias dkcrm='docker container rm'
  alias dki='docker image'
  alias dkil='docker image ls -a'
  alias dkip='docker image pull'
  alias dkib='docker image build'
  alias dkiin='docker image inspect'
  alias dkirm='docker image rm'
  alias dkn='docker network'
  alias dknl='docker network ls'
  alias dknin='docker network inspect'
  alias dknrm='docker network rm'
  alias dkv='docker volume'
  alias dkvl='docker volume ls'
  alias dkvin='docker volume inspect'
  alias dkvrm='docker volume rm'
fi
if (( ${+commands[docker-compose]} )); then
  alias dcomp='docker-compose'
fi

if (( ${+commands[nvim]} )); then
  alias nv='nvim'
fi

#
# peco
#
function _peco_select_history() {
  BUFFER=$(fc -l -n -r 1 | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle -R -c
}
zle -N _peco_select_history
bindkey '^r' _peco_select_history

function _src_list() {
  (
    find ${HOME}/dev/src -not -path "${HOME}/dev/src/localhost/*" -mindepth 3 -maxdepth 3 -type d ;
    find ${HOME}/dev/src/localhost -mindepth 1 -maxdepth 1 -type d
    find ${HOME}/dev/src/workspace -follow -mindepth 1 -maxdepth 1 -type d
  ) | sed -e "s#${HOME}/dev/src/##g"
}
function gcd() {
  local dir=$(_src_list | peco)
  if [ -n "${dir}" ]; then
    BUFFER="cd \"$(ghq root)/${dir}\""
    print -z ${BUFFER}
  fi
}

function find_cd() {
  local dir=""
  if [[ ${PWD} = ${HOME} ]]; then
    dir=$(find ${HOME} -not -path "${HOME}/.*" -not -path "${HOME}/Library/*" -type d -maxdepth 3 | peco)
  else
    dir=$(find ${PWD} -type d -maxdepth 3 | peco)
  fi
  if [ -n "${dir}" ]; then
    BUFFER="cd \"${dir}\""
    print -z ${BUFFER}
  fi
} 2>/dev/null
alias fcd='find_cd'
alias -g G='$(ghq root)/$(_src_list | peco)'
alias -g P='$(ls | peco)'

#
# kubectl
#
if (( ${+commands[kubectl]} )); then
  alias k='kubectl'
  source <(kubectl completion zsh)
fi

#
# pyenv
#
if (( ${+commands[pyenv]} )); then
  eval "$(pyenv init -)"
fi
