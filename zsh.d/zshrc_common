#
# less Colours
#
if [[ ${PAGER} == 'less' ]]; then
  export LESS='-R -i -M -X -F'
  export LESSCHARSET='utf-8'
  export LESS_TERMCAP_mb=$(tput bold; tput setaf 1)    # Start blinking
  export LESS_TERMCAP_md=$(tput bold; tput setaf 5)    # Start bold mode
  export LESS_TERMCAP_me=$(tput sgr0)                  # End all mode like so, us, mb, md, and mr
  export LESS_TERMCAP_so=$(tput setab 7; tput setaf 0) # Start standout mode
  export LESS_TERMCAP_se=$(tput rmso; tput sgr0)       # End standout mode
  export LESS_TERMCAP_us=$(tput setaf 2)               # Start underlining
  export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)       # End underlining
fi

#
# Aliases and functions
#
alias la='ls -A'          # all files
alias ll='ls -Fhl'        # long format and human-readable sizes
alias lla='ls -AFhl'      # long format, all files
alias lr='ll -R'          # long format, recursive
alias lk='ll -Sr'         # long format, largest file size last
alias lt='ll -tr'         # long format, newest modification time last

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias df='df -h'
alias du='du -h'

alias nv='nvim'

alias dk='docker'
alias dkc='docker container'
alias dkcl='docker container ls -a'
alias dkcr='docker container run --rm --publish-all'
alias dkcR='docker container run --rm --publish-all --interactive --tty'
alias dkcin='docker container inspect'
alias dkcrm='docker container rm'
alias dki='docker image'
alias dkil='docker image ls'
alias dkip='docker image pull'
alias dkib='docker image build'
alias dkiin='docker image inspect'
alias dkirm='docker image rm'
alias dcomp='docker-compose'

function mdcd() { mkdir -p "$@" && eval cd "\"\$$#\""; }

#
# peco
#
function _peco_select_history() {
  BUFFER=$(fc -l -n -r 1 | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle -R -c
}
zle -N _peco_select_history
bindkey '^r' _peco_select_history

function _src_list() {
  (
    find ${HOME}/dev/src -not -path "${HOME}/dev/src/localhost/*" -mindepth 3 -maxdepth 3 -type d ;
    find ${HOME}/dev/src/localhost -mindepth 1 -maxdepth 1 -type d
    find ${HOME}/dev/src/workspace -follow -mindepth 1 -maxdepth 1 -type d
  ) | sed -e "s#${HOME}/dev/src/##g"
}
function gcd() {
  local dir=$(_src_list | peco)
  if [ -n "${dir}" ]; then
    BUFFER="cd \"$(ghq root)/${dir}\""
    print -z ${BUFFER}
  fi
}

function find_cd() {
  local dir=""
  if [[ ${PWD} = ${HOME} ]]; then
    dir=$(find ${HOME} -not -path "${HOME}/.*" -not -path "${HOME}/Library/*" -type d -maxdepth 3 | peco)
  else
    dir=$(find ${PWD} -type d -maxdepth 3 | peco)
  fi
  if [ -n "${dir}" ]; then
    BUFFER="cd \"${dir}\""
    print -z ${BUFFER}
  fi
} 2>/dev/null
alias fcd='find_cd'
alias -g G='$(ghq root)/$(_src_list | peco)'
alias -g P='$(ls | peco)'

#
# Add completion
#
if (( ${+commands[kubectl]} )); then
  source <(kubectl completion zsh)
fi
if (( ${+commands[minikube]} )); then
  source <(minikube completion zsh)
fi
if (( ${+commands[pip3]} )); then
  eval "$(pip3 completion --zsh)"
fi

# Anaconda3
[[ -s ${HOME}/anaconda3/bin/conda ]] && eval "$(${HOME}/anaconda3/bin/conda shell.zsh hook)"
[[ -s ${HOME}/miniconda3/bin/conda ]] && eval "$(${HOME}/miniconda3/bin/conda shell.zsh hook)"
[[ -s /usr/local/Caskroom/miniforge/base/bin/conda ]] && eval "$(/usr/local/Caskroom/miniforge/base/bin/conda shell.zsh hook)"

